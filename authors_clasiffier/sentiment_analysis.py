# -*- coding: utf-8 -*-
"""Sentiment Analysis.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DZpWP3IoTy9qHk7N3UKsh529HbrG7rl-
"""

"""Código para interpretar el sentimiento de una canción"""
! pip install nltk
import nltk
nltk.download('punkt')
nltk.download('stopwords')
with open("/AlejandroSanz.txt", 'r', encoding='utf-8') as file:
    text = file.read()
from nltk.tokenize import word_tokenize
from nltk.corpus import stopwords
import string

# Tokenización
words = word_tokenize(text.lower())  # Convierte a minúsculas

# Eliminación de signos de puntuación y palabras irrelevantes
stop_words = set(stopwords.words('spanish'))
words = [word for word in words if word.isalnum() and word not in stop_words]
from nltk.sentiment import SentimentIntensityAnalyzer

# Crear una instancia del analizador de intensidad de sentimiento de NLTK
sia = SentimentIntensityAnalyzer()

# Obtener la polaridad del sentimiento
sentiment_score = sia.polarity_scores(text)

# Imprimir el resultado
print("Sentiment Score:", sentiment_score)

# Interpretar el sentimiento
if sentiment_score['compound'] >= 0.05:
    print("La canción tiene un sentimiento positivo.")
elif sentiment_score['compound'] <= -0.05:
    print("La canción tiene un sentimiento negativo.")
else:
    print("La canción tiene un sentimiento neutro.")



